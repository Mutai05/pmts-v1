# SSH key for private repo
- name: Ensure .ssh directory exists
  file:
    path: "{{ app_home }}/.ssh"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0700'

- name: Add github key
  copy:
    src: "{{ git_ssh_key }}"
    dest: "{{ app_home }}/.ssh/id_rsa"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0600'

- name: Add known hosts
  become_user: "{{ app_user }}"
  shell: ssh-keyscan github.com >> {{ app_home }}/.ssh/known_hosts

- name: Ensure git is installed
  apt:
    name: git
    state: present
  become: yes

# Git checkout
- name: Clone/update git repository
  become_user: "{{ app_user }}"
  git:
    repo: "{{ git_repo }}"
    dest: "{{ app_src_dir }}"
    version: "{{ git_branch }}"
    accept_hostkey: yes
    key_file: "{{ app_home }}/.ssh/id_rsa"
    force: yes

- name: Ensure static and media directories exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
  with_items:
    - "{{ app_media_dir }}"
    - "{{ app_static_dir }}"

# Virtual environment and dependencies
- name: Create virtual environment
  become_user: "{{ app_user }}"
  command: python3 -m venv {{ app_env_dir }}
  args:
    creates: "{{ app_env_dir }}/bin/python"

- name: Install pip packages
  become_user: "{{ app_user }}"
  pip:
    requirements: "{{ app_src_dir }}/requirements.txt"
    virtualenv: "{{ app_env_dir }}"

# Environment variables
- name: Create .env file
  template:
    src: templates/env.j2
    dest: "{{ app_src_dir }}/.env"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0600'

# Gunicorn systemd service
- name: Create Gunicorn systemd service
  template:
    src: templates/gunicorn.service.j2
    dest: /etc/systemd/system/{{ app_name }}.service
    owner: root
    group: root
    mode: '0644'

- name: Start and enable Gunicorn service
  systemd:
    name: "{{ app_name }}"
    state: restarted
    daemon_reload: yes
    enabled: yes
